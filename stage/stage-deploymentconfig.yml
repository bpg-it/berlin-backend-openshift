apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: gitlab-builder
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    generation: 1
    labels:
      app: berlin-backend
    name: berlin-backend
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: berlin-backend
      deploymentconfig: berlin-backend
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          app: berlin-backend
          deploymentconfig: berlin-backend
      spec:
        containers:
        - image: "docker-registry.default.svc:5000/${IMAGE_NAMESPACE}/berlin-backend:${IMAGE_TAG}"
          env:
          - name: SPRING_PROFILES_ACTIVE
            value: ${SPRING_PROFILES_ACTIVE}
          - name: GC_MAX_METASPACE_SIZE
            value: '256'
          imagePullPolicy: Always
          name: berlin-backend
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - berlin-backend
        from:
          kind: ImageStreamTag
          name: berlin-backend:${IMAGE_TAG}
          namespace: "${IMAGE_NAMESPACE}"
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftWebConsole
    creationTimestamp: null
    generation: 1
    labels:
      app: pgadmin4
    name: pgadmin4
  spec:
    replicas: 1
    selector:
      app: pgadmin4
      deploymentconfig: pgadmin4
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftWebConsole
        creationTimestamp: null
        labels:
          app: pgadmin4
          deploymentconfig: pgadmin4
      spec:
        containers:
        - env:
          - name: PGADMIN_DEFAULT_EMAIL
            value: pgadmin.berlin@os2.bpghub.de
          - name: PGADMIN_DEFAULT_PASSWORD
            value: rW4Vw9K32ORfPbSa
          - name: PGADMIN_LISTEN_PORT
            value: "8080"
          image: docker-registry.default.svc:5000/openshift/pgadmin4:latest
          imagePullPolicy: Always
          name: pgadmin4
          ports:
          - containerPort: 80
            protocol: TCP
          - containerPort: 443
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgadmin
            name: volume-pgadmin-data
          - mountPath: /var/log/pgadmin
            name: volume-pgadmin-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - persistentVolumeClaim:
            claimName: pgadmin-data
          name: volume-pgadmin-data
        - name: volume-pgadmin-log
          persistentVolumeClaim:
            claimName: pgadmin-log
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - pgadmin4
        from:
          kind: ImageStreamTag
          name: pgadmin4:latest
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations: null
    creationTimestamp: null
    generation: 1
    name: bpgit-berlin-db
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      name: bpgit-berlin-db
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: bpgit-berlin-db
      spec:
        containers:
        - env:
          - name: POSTGRESQL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-admin-password
                name: postgresql
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: postgresql
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: postgresql
          image: postgresql-10-centos7
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - pg_isready -h 127.0.0.1 -p 5432
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: bpgit-berlin-db
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: bpgit-berlin-db
    test: false
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - bpgit-berlin-db
        from:
          kind: ImageStreamTag
          name: postgresql-10-centos7:latest
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0    
parameters:
  - name: IMAGE_NAMESPACE 
    displayName: BUILD Namespace
    description: BUILD Namespace to enable Pull Permissions from 
    required: true
  - name: IMAGE_TAG 
    displayName: BUILD Tag
    description: BUILD Tag to enable Pull Permissions from 
    required: true
  - name: NAMESPACE_FOR_ROUTE 
    displayName: NAMESPACE_FOR_ROUTE Tag
    description: NAMESPACE_FOR_ROUTE Tag to enable Pull Permissions from 
    required: true
  - name: SPRING_PROFILES_ACTIVE
    displayName: Active Profile for the Spring boot App
    description: Active Profile for the Spring boot App 
    required: true
